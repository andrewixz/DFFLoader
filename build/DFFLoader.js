!function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var a={CHUNK_NAOBJECT:0,CHUNK_STRUCT:1,CHUNK_STRING:2,CHUNK_EXTENSION:3,CHUNK_CAMERA:5,CHUNK_TEXTURE:6,CHUNK_MATERIAL:7,CHUNK_MATERIALLIST:8,CHUNK_ATOMICSECT:9,CHUNK_PLANESECT:10,CHUNK_WORLD:11,CHUNK_SPLINE:12,CHUNK_MATRIX:13,CHUNK_FRAMELIST:14,CHUNK_GEOMETRY:15,CHUNK_CLUMP:16,CHUNK_LIGHT:18,CHUNK_UNICODESTRING:19,CHUNK_ATOMIC:20,CHUNK_TEXTURENATIVE:21,CHUNK_TEXDICTIONARY:22,CHUNK_ANIMDATABASE:23,CHUNK_IMAGE:24,CHUNK_SKINANIMATION:25,CHUNK_GEOMETRYLIST:26,CHUNK_ANIMANIMATION:27,CHUNK_HANIMANIMATION:27,CHUNK_TEAM:28,CHUNK_CROWD:29,CHUNK_RIGHTTORENDER:31,CHUNK_MTEFFECTNATIVE:32,CHUNK_MTEFFECTDICT:33,CHUNK_TEAMDICTIONARY:34,CHUNK_PITEXDICTIONARY:35,CHUNK_TOC:36,CHUNK_PRTSTDGLOBALDATA:37,CHUNK_ALTPIPE:38,CHUNK_PIPEDS:39,CHUNK_PATCHMESH:40,CHUNK_CHUNKGROUPSTART:41,CHUNK_CHUNKGROUPEND:42,CHUNK_UVANIMDICT:43,CHUNK_COLLTREE:44,CHUNK_ENVIRONMENT:45,CHUNK_COREPLUGINIDMAX:46,CHUNK_MORPH:261,CHUNK_SKYMIPMAP:272,CHUNK_SKIN:278,CHUNK_PARTICLES:280,CHUNK_HANIM:286,CHUNK_MATERIALEFFECTS:288,CHUNK_PDSPLG:305,CHUNK_ADCPLG:308,CHUNK_UVANIMPLG:309,CHUNK_BINMESH:1294,CHUNK_NATIVEDATA:1296,CHUNK_VERTEXFORMAT:1296,CHUNK_PIPELINESET:39056115,CHUNK_SPECULARMAT:39056118,CHUNK_2DFX:39056120,CHUNK_NIGHTVERTEXCOLOR:39056121,CHUNK_COLLISIONMODEL:39056122,CHUNK_REFLECTIONMAT:39056124,CHUNK_MESHEXTENSION:39056125,CHUNK_FRAME:39056126},n=4,i=8,s=128,o=16777216;function d(){}d.prototype={constructor:d.prototype,parse:function(e){for(this.data=new DataView(e),this.position=0;this.position<e.byteLength;){var t=this.readChunk(a.CHUNK_CLUMP);if(t)return t}return null},readHeader:function(e){var t={};this.position;return t.type=this.readUInt32(),t.name=this.getChunkName(t.type),t.length=this.readUInt32(),t.build=this.readUInt32(),t.version,4294901760&t.build?t.version=t.build>>14&261888|t.build>>16&63|196608:t.version=t.build<<8,void 0!==e&&(t.parent=e),t},getChunkName:function(e){for(var t in a)if(a[t]==e)return t;return"CHUNK_UNKNOWN"},readInt32:function(){var e=this.data.getInt32(this.position,!0);return this.position+=4,e},readUInt32:function(){var e=this.data.getUint32(this.position,!0);return this.position+=4,e},readUInt16:function(){var e=this.data.getUint16(this.position,!0);return this.position+=2,e},readUInt8:function(){var e=this.data.getUint8(this.position,!0);return this.position+=1,e},readFloat32:function(){var e=this.data.getFloat32(this.position,!0);return this.position+=4,e},readString:function(e){for(var t="",r=-1,a=this.position+e;this.position<a;){if(0==(r=this.data.getUint8(this.position++,!0))){this.position=a;break}t+=String.fromCharCode(r)}return t.trim()},readChunk:function(e,t){var r=this.position,n=this.readHeader(t);if(e!=n.type)return e!=a.CHUNK_CLUMP&&console.error('DFFLoader: Chunk "'+this.getChunkName(e)+'" not found at position '+r),this.position+=n.length,null;r=this.position;var i=this.readData(n);if(this.position<r+n.length)console.warn("DFFLoader: Chunk "+n.name+" not readed to end"),this.position=r+n.length;else if(this.position>r+n.length)throw"DFFLoader: Offset is outside the bounds of the chunk "+n.name;return i},readData:function(e){var t=null;switch(e.type){case a.CHUNK_CLUMP:var r=this.readHeader(),d=this.readUInt32();12==r.length&&(this.readUInt32(),this.readUInt32()),(t={}).RWFrameList=this.readChunk(a.CHUNK_FRAMELIST),t.RWGeometryList=this.readChunk(a.CHUNK_GEOMETRYLIST),t.RWAtomicList=new Array(d);for(var h=0;h<d;h++)t.RWAtomicList[h]=this.readChunk(a.CHUNK_ATOMIC);this.readExtension(t);break;case a.CHUNK_FRAMELIST:r=this.readHeader();var u=this.readUInt32();t=new Array(u);for(h=0;h<u;h++){var U={};U.rotationMatrix=[this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32(),this.readFloat32()],U.position=[this.readFloat32(),this.readFloat32(),this.readFloat32()],U.parentIndex=this.readInt32(),U.flags=this.readUInt32(),t[h]={RWFrame:U}}for(h=0;h<u;h++)this.readExtension(t[h]);break;case a.CHUNK_GEOMETRYLIST:r=this.readHeader();var I=this.readUInt32();t=new Array(I);for(h=0;h<I;h++)t[h]=this.readChunk(a.CHUNK_GEOMETRY);break;case a.CHUNK_GEOMETRY:r=this.readHeader();(t={}).format=this.readUInt32(),t.numTriangles=this.readUInt32(),t.numVertices=this.readUInt32(),t.numMorphTargets=this.readUInt32();var l=(1044480&t.format)>>16;if(t.format&n&&(l=1),r.version<212992&&(t.ambient=this.readFloat32(),t.specular=this.readFloat32(),t.diffuse=this.readFloat32()),0==(t.format&o)){if(t.format&i){t.prelitcolor=new Array(t.numVertices);for(h=0;h<t.numVertices;h++)t.prelitcolor[h]={r:this.readUInt8(),g:this.readUInt8(),b:this.readUInt8(),a:this.readUInt8()}}if(t.format&(n|s)){t.texCoords=new Array(l);for(h=0;h<l;h++){t.texCoords[h]=new Array(t.numVertices);for(var N=0;N<t.numVertices;N++)t.texCoords[h][N]={u:this.readFloat32(),v:this.readFloat32()}}}t.triangles=new Array(t.numTriangles);for(h=0;h<t.numTriangles;h++)t.triangles[h]={vertex2:this.readUInt16(),vertex1:this.readUInt16(),materialId:this.readUInt16(),vertex3:this.readUInt16()}}t.morphTargets=new Array(t.numMorphTargets);for(h=0;h<t.numMorphTargets;h++){if(t.morphTargets[h]={boundingSphere:{x:this.readFloat32(),y:this.readFloat32(),z:this.readFloat32(),radius:this.readFloat32()},hasVertices:this.readUInt32(),hasNormals:this.readUInt32()},t.morphTargets[h].hasVertices){t.morphTargets[h].vertices=new Array(t.numVertices);for(N=0;N<t.numVertices;N++)t.morphTargets[h].vertices[N]={x:this.readFloat32(),y:this.readFloat32(),z:this.readFloat32()}}if(t.morphTargets[h].hasNormals){t.morphTargets[h].normals=new Array(t.numVertices);for(N=0;N<t.numVertices;N++)t.morphTargets[h].normals[N]={x:this.readFloat32(),y:this.readFloat32(),z:this.readFloat32()}}}t.RWMaterialList=this.readChunk(a.CHUNK_MATERIALLIST),this.readExtension(t);break;case a.CHUNK_MATERIALLIST:r=this.readHeader();var E=this.readUInt32();t=new Array(E);for(h=0;h<E;h++)t[h]={id:this.readUInt32()};for(h=0;h<E;h++)t[h].RWMaterial=this.readChunk(a.CHUNK_MATERIAL);break;case a.CHUNK_MATERIAL:r=this.readHeader();(t={}).flags=this.readUInt32(),t.color={r:this.readUInt8(),g:this.readUInt8(),b:this.readUInt8(),a:this.readUInt8()},this.readUInt32(),t.isTextured=this.readUInt32(),r.version>197632&&(t.ambient=this.readFloat32(),t.specular=this.readFloat32(),t.diffuse=this.readFloat32()),t.isTextured&&(t.RWTexture=this.readChunk(a.CHUNK_TEXTURE)),this.readExtension(t);break;case a.CHUNK_TEXTURE:r=this.readHeader();(t={}).filterFlags=this.readUInt16(),this.readUInt16(),t.name=this.readChunk(a.CHUNK_STRING),t.maskName=this.readChunk(a.CHUNK_STRING),this.readExtension(t);break;case a.CHUNK_STRING:t=this.readString(e.length);break;case a.CHUNK_ATOMIC:r=this.readHeader();(t={}).frameIndex=this.readUInt32(),t.geometryIndex=this.readUInt32(),t.flags=this.readUInt32(),this.readUInt32(),this.readExtension(t);break;case a.CHUNK_EXTENSION:t={};for(var C=this.position+e.length;this.position<C;){r=this.readHeader();var T={},f=this.position;switch(r.type){case a.CHUNK_HANIM:if(T.hAnimVersion=this.readUInt32(),T.nodeId=this.readUInt32(),T.numNodes=this.readUInt32(),T.numNodes){T.flags=this.readUInt32(),T.keyFrameSize=this.readUInt32(),T.nodes=new Array(T.numNodes);for(h=0;h<T.numNodes;h++)T.nodes[h]={nodeId:this.readUInt32(),nodeIndex:this.readUInt32(),flags:this.readUInt32()}}break;case a.CHUNK_FRAME:T=this.readString(r.length);break;case a.CHUNK_BINMESH:T.faceType=this.readUInt32();var H=this.readUInt32();T.numIndices=this.readUInt32(),T.splits=new Array(H);var p=r.length>12+8*H;for(h=0;h<H;h++){var m=this.readUInt32();if(T.splits[h]={},T.splits[h].matIndex=this.readUInt32(),p){T.splits[h].indices=new Array(m);for(N=0;N<m;N++)T.splits[h].indices[N]=this.readUInt32()}}break;case a.CHUNK_SKIN:T.numBones=this.readUInt8(),T.numUsedBones=this.readUInt8(),T.maxWeightsPerVertex=this.readUInt8(),T.padding=this.readUInt8(),T.bonesUsed=new Array(T.numUsedBones);for(h=0;h<T.numUsedBones;h++)T.bonesUsed[h]=this.readUInt8();T.vertexBoneIndices=new Array(e.parent.numVertices);for(h=0;h<e.parent.numVertices;h++)T.vertexBoneIndices[h]={x:this.readUInt8(),y:this.readUInt8(),z:this.readUInt8(),w:this.readUInt8()};T.vertexBoneWeights=new Array(e.parent.numVertices);for(h=0;h<e.parent.numVertices;h++)T.vertexBoneWeights[h]={x:this.readFloat32(),y:this.readFloat32(),z:this.readFloat32(),w:this.readFloat32()};T.skinToBoneMatrix=new Array(T.numBones);for(h=0;h<T.numBones;h++){0==T.numUsedBones&&(this.position+=4),T.skinToBoneMatrix[h]=new Array(16);for(N=0;N<16;N++)T.skinToBoneMatrix[h]=this.readFloat32()}0!=T.numUsedBones&&(this.position+=12);break;case a.CHUNK_MESHEXTENSION:if(0==this.readUInt32())break;throw"DFFLoader: Not implemented";default:this.position+=r.length,console.warn("DFFLoader: Skip "+r.name+" extension")}this.position<f+r.length&&console.warn("DFFLoader: Extension "+r.name+" not readed to end"),t[r.name]&&console.error("DFFLoader: Rewrite of extension "+r.name),t[r.name]=T}break;default:throw"DFFLoader: Not implemented"}return t},readExtension:function(e){e.RWExtension=this.readChunk(a.CHUNK_EXTENSION,e)}};var h=d;THREE.DFFLoader=function(e){this.manager=e||THREE.DefaultLoadingManager},THREE.DFFLoader.prototype={constructor:THREE.DFFLoader,load:function(e,t,r,a){var n=this,i=new THREE.FileLoader(this.manager);i.setResponseType("arraybuffer"),void 0!==this.path&&i.setPath(this.path),i.load(e,function(e){t(n.read(e))},r,a)},setPath:function(e){return this.path=e,this},read:function(e){var t=new h,r=new THREE.Group,a=t.parse(e),n=[];return a.RWGeometryList.forEach(function(e){var t=new THREE.BufferGeometry,r=[];e.triangles.forEach(function(e){void 0===r[e.materialId]&&(r[e.materialId]=[]),r[e.materialId].push([e.vertex1,e.vertex2,e.vertex3])});var a=Object.keys(r).reduce((e,t)=>e+r[t].length,0),i=new THREE.BufferAttribute(new Float32Array(3*a*3),3),s=e.morphTargets[0].hasNormals&&new THREE.BufferAttribute(new Float32Array(3*a*3),3,!0),o=e.prelitcolor&&new THREE.BufferAttribute(new Uint8Array(3*a*3),3,!0),d=e.texCoords&&new THREE.BufferAttribute(new Float32Array(3*a*2),2,!0),h=0;const u={};for(const a of Object.keys(r)){const n=r[a];t.addGroup(h,3*n.length,Number(a));for(const t of n)for(const r of t){var U=e.morphTargets[0].vertices[r];if(i.setXYZ(h,U.x,U.y,U.z),u[r]=u[r]||[],u[r].push(h),s){var I=e.morphTargets[0].normals[r];s.setXYZ(h,I.x,I.y,I.z)}if(d){var l=e.texCoords[0][r];d.setXY(h,l.u,1-l.v)}if(o)throw"DFFLoader: Not implemented";h+=1}}t.dynamic=!1,t.addAttribute("position",i),s?t.addAttribute("normal",s,!0):t.computeFaceNormals(),o&&t.addAttribute("color",o,!0),d&&t.addAttribute("uv",d),t.computeBoundingSphere();var N=e.RWMaterialList.map(function(e){var t=new THREE.MeshStandardMaterial({vertexColors:o?THREE.VertexColors:THREE.NoColors,roughness:e.RWMaterial.diffuse});if(e.RWMaterial.isTextured){var r=new THREE.TextureLoader;this.path&&r.setPath(this.path),e.RWMaterial.RWTexture.name&&(t.map=r.load(e.RWMaterial.RWTexture.name+".png",()=>{e.needsUpdate=!0}),t.map.wrapS=THREE.RepeatWrapping,t.map.wrapT=THREE.RepeatWrapping),e.RWMaterial.RWTexture.maskName&&(t.alphaMap=r.load(e.RWMaterial.RWTexture.maskName+".png",()=>{t.needsUpdate=!0}),t.alphaMap.wrapS=THREE.RepeatWrapping,t.alphaMap.wrapT=THREE.RepeatWrapping,t.transparent=!0,t.alphaTest=.05)}return t},this);if(e.RWExtension.CHUNK_SKIN){for(var E=e.RWExtension.CHUNK_SKIN,C=new THREE.Float32BufferAttribute(4*i.count,4),T=new THREE.Float32BufferAttribute(4*i.count,4),f=0;f<e.numVertices;f++)u[f].forEach(function(e){C.setXYZW(e,E.vertexBoneIndices[f].x,E.vertexBoneIndices[f].y,E.vertexBoneIndices[f].z,E.vertexBoneIndices[f].w),T.setXYZW(e,E.vertexBoneWeights[f].x,E.vertexBoneWeights[f].y,E.vertexBoneWeights[f].z,E.vertexBoneWeights[f].w)});t.addAttribute("skinIndex",C),t.addAttribute("skinWeight",T)}n.push({geometry:t,materials:N})},this),a.RWAtomicList.forEach(function(e){n[e.geometryIndex].geometry,n[e.geometryIndex].materials;var t=new Array(a.RWFrameList.length),r=null,i=null;if(a.RWFrameList.forEach(function(e,a){var n=e.RWFrame,s=new THREE.Bone;s.name=e.RWExtension.CHUNK_FRAME;var o=new THREE.Matrix4;o.set(n.rotationMatrix[0],n.rotationMatrix[3],n.rotationMatrix[6],n.position[0],n.rotationMatrix[1],n.rotationMatrix[4],n.rotationMatrix[7],n.position[1],n.rotationMatrix[2],n.rotationMatrix[5],n.rotationMatrix[8],n.position[2],0,0,0,1),s.applyMatrix(o),n.parentIndex>=0&&t[n.parentIndex].add(s);var d=e.RWExtension.CHUNK_HANIM;d&&(s.nodeId=d.nodeId,s.nodeIndex=a,d.numNodes>0&&(i=s,r=d.nodes.map(function(e,t){return{id:e.nodeId,index:t,flags:e.flags,frame:null}}))),t[a]=s}),r){var s=new Array(r.length);function o(e,a){return e?e.nodeId>=0&&e.nodeId==a&&-1==function(e){for(var t=0;t<r.length;t++)if(r[t].node==e)return t;return-1}(e)?e:o(e.children[0],a)||o(t[e.nodeIndex+1],a):null}for(var d=0;d<r.length;d++)r[d].node=o(i,r[d].id),s[d]=r[d].node;n[e.geometryIndex].skeleton=new THREE.Skeleton(s)}}),n.forEach(function(e){var t;e.skeleton?(e.materials.forEach(function(e){e.skinning=!0}),(t=new THREE.SkinnedMesh(e.geometry,e.materials)).add(e.skeleton.bones[0]),t.bind(e.skeleton)):t=new THREE.Mesh(e.geometry,e.materials),t.rotation.set(0,Math.PI,Math.PI/2),r.add(t)}),console.log(a),r}}}]);